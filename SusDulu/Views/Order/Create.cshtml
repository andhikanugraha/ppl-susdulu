@model SusDulu.Models.Ticket

@{
    ViewBag.Title = "Pemesanan Tiket";
}

<h1 class="page-header">Data Penumpang</h1>

@using (Html.BeginForm("Proceed", "Order", FormMethod.Post, new { @class = "form-horizontal" }))
{
<div class="row">
    <div class="col-md-4">
        <p class="lead">Isilah data penumpang untuk tiket yang Anda pesan pada formulir di sebelah kanan.</p>
    </div>
    <div class="col-md-8 ticket-details-all">
        <ul class="nav nav-tabs" id="ticket-tabs">
        @for (var j = 0; j < ViewBag.Sum; j++)
        {
            <li><a href="#ticket@(j + 1)">Penumpang @(j + 1)</a></li>
        }
        </ul>

        @if (TempData["errSeat"] != null)
        { <div class="alert alert-danger">@TempData["errSeat"]</div> }
        @Html.ValidationSummary(true)

        <div class="tab-content">
        @for (var j = 0; j < ViewBag.Sum; j++)
        {
            <div id="ticket@(j + 1)" class="tab-pane ticket-details fade">
                @*<h3>Penumpang @(j + 1)</h3>*@

                <div class="form-group">
                    <label class="control-label col-md-3" for="First_name">Nama</label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.First_name, new { @class = "form-control", placeholder = "Nama depan" })
                        @Html.ValidationMessageFor(model => model.First_name)
                    </div>
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.Middle_name, new { @class = "form-control", placeholder = "Nama tengah" })
                        @Html.ValidationMessageFor(model => model.Middle_name)
                    </div>
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.Last_name, new { @class = "form-control", placeholder = "Nama belakang" })
                        @Html.ValidationMessageFor(model => model.Last_name)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3" for="Email">Alamat surel</label>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Alamat surel" })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3" for="Address">Alamat</label>
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", placeholder = "Jalan" })
                        @Html.ValidationMessageFor(model => model.Address)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3" for="City">@*Kota*@</label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.City, new { @class = "form-control", placeholder = "Kota" })
                        @Html.ValidationMessageFor(model => model.City)
                    </div>
                @*</div>
                <div class="form-group">
                    <label class="control-label col-md-3" for="Province">Provinsi</label>*@
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.Province, new { @class = "form-control", placeholder = "Provinsi" })
                        @Html.ValidationMessageFor(model => model.Province)
                    </div>
                @*</div>
                <div class="form-group">
                    <label class="control-label col-md-3" for="Postcode">Kode pos</label>*@
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.Postcode, new { @class = "form-control", placeholder = "Kode pos" })
                        @Html.ValidationMessageFor(model => model.Postcode)
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3" for="Phone">Nomor telepon</label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", placeholder = "Nomor telepon" })
                        @Html.ValidationMessageFor(model => model.Phone)
                    </div>
                @*</div>
                <div class="form-group">*@
                    <label class="control-label col-md-3" for="Gender">Jenis kelamin</label>
                    <div class="col-md-3">
                        @{
                            List<SelectListItem> genderList = new List<SelectListItem>();
                            genderList.Add(new SelectListItem
                            {
                                Text = "Laki-laki",
                                Value = "MALE",
                                Selected = true
                            });
                            genderList.Add(new SelectListItem
                            {
                                Text = "Perempuan",
                                Value = "FEMALE",
                                Selected = false
                            });
                        }

                        @Html.DropDownList("gender", genderList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender)
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3" for="Class">Kelas</label>
                    <div class="col-md-3">
                        @{
                            List<SelectListItem> classList = new List<SelectListItem>();
                            classList.Add(new SelectListItem
                            {
                                Text = "Eksekutif",
                                Value = "FIRSTCLASS",
                                Selected = true
                            });
                            classList.Add(new SelectListItem
                            {
                                Text = "Bisnis",
                                Value = "BUSINESS",
                                Selected = false
                            });
                            classList.Add(new SelectListItem
                            {
                                Text = "Ekonomi",
                                Value = "ECONOMY",
                                Selected = false
                            });
                        }
                        @Html.DropDownList("class", classList, new { @class = "form-control class" })
                        @Html.ValidationMessageFor(model => model.Class)
                    </div>
                <!-- </div>
                <div class="form-group"> -->
                    <label class="control-label col-md-3" for="Seat">Tempat duduk</label>
                    <div class="col-md-3">
                        @{
                            List<SelectListItem> seatList = new List<SelectListItem>();
                            string col = ViewBag.seatCol;
                            for (int i = 0; i < ViewBag.seatRow; i++)
                            {
                                foreach (char c in col)
                                {
                                    string labelSeat = (i + 1).ToString() + c;

                                    //ambil data occupied seat dari controller
                                    List<string> occSeat = (List<string>)ViewBag.occSeat;
                                    if (!occSeat.Contains(labelSeat))
                                    {
                                        //jika seat blm dipesan
                                        seatList.Add(new SelectListItem
                                        {
                                            Text = labelSeat,
                                            Value = labelSeat,
                                            Selected = false
                                        });
                                    }
                                }
                            }
                        }

                        @Html.DropDownList("seat", seatList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Seat)
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3" for="Price">Harga</label>
                    <p class="form-control-static col-md-6">
                        @{
                            ViewBag.prc = "1000000";
                        }
                        Rp <span class="price">@ViewBag.prc</span>
                        @Html.Hidden("Price", "0", new { @class = "price" })
                    </p>
                </div>
            </div>
        }
            <div class="submit-order-action">
                <input name="id_flight1" type="hidden" value="@ViewBag.IDFlight1" />
                <input name="id_flight2" type="hidden" value="@ViewBag.IDFlight2" />
                <input name="Sum" type="hidden" value="@ViewBag.Sum" />
                <button class="btn btn-danger btn-lg">Tinjau pesanan <i class="glyphicon glyphicon-arrow-right"></i></button>
            </div>
        </div>

    </div>
</div>
}
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        // $('.tab-pane').hide();
        $('.tab-pane:first').addClass('in');
        $('#ticket-tabs li a:first').tab('show');
        $('#ticket-tabs li a').click(function (e) {
            e.preventDefault();
            $(this).tab('show');
            this.blur();
        });

        var basePrice = @ViewBag.prc;
        var factors = {
            'FIRSTCLASS': 2,
            'BUSINESS': 1.5,
            'ECONOMY': 1
        }
        getPrice = function(val) {
            if (factors[val])
                return factors[val] * basePrice;
            else
                return basePrice;
        }

        // credits: http://stackoverflow.com/a/149099/2102731
        formatMoney = function(n, c, d, t){
            var c = isNaN(c = Math.abs(c)) ? 2 : c,
                d = d == undefined ? ',' : d,
                t = t == undefined ? '.' : t,
                s = n < 0 ? '-' : '',
                i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
                j = (j = i.length) > 3 ? j % 3 : 0;
            return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
        };

        handleClassChange = function(e) {
            select = $(this);
            val = select.val();
            newPrice = getPrice(val);
            ticket = select.parents('.tab-pane');
            priceInput = $('input.price', ticket);
            priceSpan = $('span.price', ticket);
            priceInput.val(newPrice);
            priceSpan.text(formatMoney(newPrice));
        }
        $('select.class').change(handleClassChange).each(handleClassChange);
    })
</script>
}
